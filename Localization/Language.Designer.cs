//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace xdelta3_cross_gui.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Language {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("xdelta3_cross_gui.Localization.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch File only (for later patching).
        /// </summary>
        internal static string BatchFileOnly {
            get {
                return ResourceManager.GetString("BatchFileOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy xDelta executables to output directory.
        /// </summary>
        internal static string CopyExecutables {
            get {
                return ResourceManager.GetString("CopyExecutables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xDelta3 Cross-Platform GUI by dan0v, using xDelta 3.1.0\\n\\nHeavily inspired by xDelta GUI 2\\nby Jordi Vermeulen (Modified by Brian Campbell).
        /// </summary>
        internal static string Credit {
            get {
                return ResourceManager.GetString("Credit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss.
        /// </summary>
        internal static string DismissButton {
            get {
                return ResourceManager.GetString("DismissButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occured.
        /// </summary>
        internal static string ErrorHeader {
            get {
                return ResourceManager.GetString("ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some options may have been reset. Please check before trying again.
        /// </summary>
        internal static string ErrorText {
            get {
                return ResourceManager.GetString("ErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        internal static string FilesHeader {
            get {
                return ResourceManager.GetString("FilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go!.
        /// </summary>
        internal static string Go {
            get {
                return ResourceManager.GetString("Go", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum multithreading.
        /// </summary>
        internal static string MaximumThreads {
            get {
                return ResourceManager.GetString("MaximumThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} new File(s).
        /// </summary>
        internal static string NewFilesHeader {
            get {
                return ResourceManager.GetString("NewFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a new version available.
        /// </summary>
        internal static string NewVersionHeader {
            get {
                return ResourceManager.GetString("NewVersionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} can be downloaded from the releases page on GitHub.
        /// </summary>
        internal static string NewVersionText {
            get {
                return ResourceManager.GetString("NewVersionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} old File(s).
        /// </summary>
        internal static string OldFilesHeader {
            get {
                return ResourceManager.GetString("OldFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open output directory.
        /// </summary>
        internal static string OpenOutputDirectory {
            get {
                return ResourceManager.GetString("OpenOutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        internal static string OptionsHeader {
            get {
                return ResourceManager.GetString("OptionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch extension.
        /// </summary>
        internal static string PatchExtension {
            get {
                return ResourceManager.GetString("PatchExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch file(s) destination.
        /// </summary>
        internal static string PatchFileDestination {
            get {
                return ResourceManager.GetString("PatchFileDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch subdirectory.
        /// </summary>
        internal static string PatchSubdir {
            get {
                return ResourceManager.GetString("PatchSubdir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress.
        /// </summary>
        internal static string Progress {
            get {
                return ResourceManager.GetString("Progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset defaults.
        /// </summary>
        internal static string ResetDefaults {
            get {
                return ResourceManager.GetString("ResetDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save settings.
        /// </summary>
        internal static string SaveSettings {
            get {
                return ResourceManager.GetString("SaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show full paths.
        /// </summary>
        internal static string ShowFullPaths {
            get {
                return ResourceManager.GetString("ShowFullPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show terminal window.
        /// </summary>
        internal static string ShowTerminal {
            get {
                return ResourceManager.GetString("ShowTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string SuccessHeader {
            get {
                return ResourceManager.GetString("SuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your xDelta3 patches, or patch batches, have been successfuly created.
        /// </summary>
        internal static string SuccessText {
            get {
                return ResourceManager.GetString("SuccessText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle selection.
        /// </summary>
        internal static string ToggleSelectionButton {
            get {
                return ResourceManager.GetString("ToggleSelectionButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please add an equal number of Old and New files.
        /// </summary>
        internal static string UnequalFilesError {
            get {
                return ResourceManager.GetString("UnequalFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View releases.
        /// </summary>
        internal static string ViewReleases {
            get {
                return ResourceManager.GetString("ViewReleases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xDelta arguments.
        /// </summary>
        internal static string xDeltaArguments {
            get {
                return ResourceManager.GetString("xDeltaArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xDelta3 was not found on the system path, so the bundled version will be used.
        /// </summary>
        internal static string xDeltaNotOnPath {
            get {
                return ResourceManager.GetString("xDeltaNotOnPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xDelta3 was found on the system path, so it will be used.
        /// </summary>
        internal static string xDeltaOnPath {
            get {
                return ResourceManager.GetString("xDeltaOnPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to xDelta3 has encountered an issue, please check the terminal output for details.
        /// </summary>
        internal static string xDeltaProcessError {
            get {
                return ResourceManager.GetString("xDeltaProcessError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip all files.
        /// </summary>
        internal static string ZipFiles {
            get {
                return ResourceManager.GetString("ZipFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip name.
        /// </summary>
        internal static string ZipName {
            get {
                return ResourceManager.GetString("ZipName", resourceCulture);
            }
        }
    }
}
